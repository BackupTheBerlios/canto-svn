<?xml version="1.0" encoding="UTF-8"?>
<project name="macrodefs">
	<description>
	    Definition of all macrodef tasks
	</description>
<!--  
  *************************************************************************
  MACRODEFINITION TAKS - START 
  ************************************************************************* 
-->
	
	  <!--
		  Macro-task name: subTarget
		    @description: call a target on a sub-project
		    @param: target -> target to be call in the sub-project
		    @param: antfile -> location of the antfile
		  
		  Example:
		    <subTarget target="build" module="ppf"/>
		-->
	  <macrodef name="moduleTarget">
		<attribute name="target" default=""/>
	  	<attribute name="module" default=""/>
	  	<sequential>
	  	   <subant target="@{target}" buildpath="modules/@{module}"/>
	  	</sequential>
	  </macrodef>
	
	
  <!--
     Macro-name: loadDeployFilterAndSettings
        @description: load filters and settings for deploy
        @param: filterrootpath -> path where the filtered file are located, 
        @param: hostname  -> hostname of the configuration to be loaded
        @param: user  -> user of the configuration to be loaded
        
        Example:
            <loadConfigFilter filterrootpath="Environment/staging_server/build_support" hostname="olga" user="atgdev10"/>
     
     -->	
	<macrodef name="loadFilterAndSettings">
	   <attribute name="filterrootpath"/>
	   <attribute name="hostname"/>
	   <attribute name="user"/>
 	   <sequential>
 	   	 
   	 <!-- check if the build_host_user.properties in the build_support is
   	      present -->
   	 <echo message="hostname : @{hostname}"/>
   	 <echo message="user : @{user}"/>
   	 <condition property="hostname_user.build.config.PRESENT">
   	    <available file="@{filterrootpath}/build_@{hostname}_@{user}.properties"/>
   	 </condition>
   	 <fail message="Environment build file [@{filterrootpath}/build_@{hostname}_@{user}.properties] not present" unless="hostname_user.build.config.PRESENT"/>
 	     <property file="@{filterrootpath}/build_@{hostname}_@{user}.properties"/>
 	   	
 	   	 <!-- check if the required property are set -->
 	   	 <if>
 	   		<not>
 	   	 		<isset property="application"/>
 	   	    </not>
 	   		<then>
 	   	        <fail message="Property application has not been set correctly ${application}"/>		
 	   		</then>
 	   	 </if>
 	    <echo message="application set to ${application}"/>
 	   	
 	   	<if>
 	   	   <not>
 	   	      <isset property="environment"/>
 	   	   </not>
 	   	   <then>
 	   		  <fail message="Property environment has not been set correctly ${environment}"/>
 	   	   </then>
 	   	</if>
 	 	 <echo message="environment set to ${environment}"/>
 	
 	   	 <!-- check if the filter file are present or not -->
 	    <condition property="application_environment.file.PRESENT">
 	        <available file="@{filterrootpath}/application_environment/${application}_${environment}.properties"/>
 	    </condition>
 	    <fail message="Filter file @{filterrootpath}/application_environment/${application}_${environment}.properties not present" unless="application_environment.file.PRESENT"/>
 	    <condition property="host_user.file.PRESENT">
 	 	        <available file="@{filterrootpath}/host_user/@{hostname}_@{user}.properties"/>
 	 	    </condition>
 	 	    <fail message="Filter file @{filterrootpath}/host_user/@{hostname}_@{user}.properties not present" unless="application_environment.file.PRESENT"/>

 	   <filter filtersfile="@{filterrootpath}/application_environment/${application}_${environment}.properties" />
 	   <filter filtersfile="@{filterrootpath}/host_user/@{hostname}_@{user}.properties" />
 	   
 	   </sequential>
	</macrodef>
	
	
<!--  
  *************************************************************************
  MACRODEFINITION TAKS - STOP
  ************************************************************************* 
-->
</project>
