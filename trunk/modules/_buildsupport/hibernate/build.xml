<?xml version="1.0"?>

<project name="hibernate-build" default="usage" basedir="..">
	<!-- for files which extend this build file the property 
	     build.support must already be set if different from .
	-->
	<property name="build.support" value="${basedir}"/>
	<import file="${build.support}/root/build.xml"/>
	<property file="${build.support}/hibernate/build.properties"/>

	<target name="schemaexport" depends="compile" description="make hibernate create and drop scripts for all src hibernate mapping files">
		<path id="hibernate.classpath">
			<path refid="compile.classpath"/>
			<pathelement location="${target.classes}"/>
		</path>

		<pathconvert property="hibernate.classpath.echo" targetos="unix">
			<path refid="hibernate.classpath"/>
		</pathconvert>
		<echo level="debug">HIBERNATE CLASSPATH : ${hibernate.classpath.echo}</echo>
		
		<taskdef name="schemaexport" classname="org.hibernate.tool.hbm2ddl.SchemaExportTask" classpathref="hibernate.classpath"/>
		
		<antcall target="-schemaexport.pre"/>
		<mkdir dir="${target.generated.hibernate}"/>
		<!--
Table 20.2. SchemaExport Command Line Options
Option Description 
-quiet don't output the script to stdout 
-drop only drop the tables 
-create only create the tables 
-text don't export to the database 
-output=my_schema.ddl output the ddl script to a file 
-naming=eg.MyNamingStrategy select a NamingStrategy 
-config=hibernate.cfg.xml read Hibernate configuration from an XML file 
-properties=hibernate.properties read database properties from a file 
-format format the generated SQL nicely in the script 
-delimiter=; set an end of line delimiter for the script 
		-->
		<schemaexport
			properties="${build.support}/hibernate/hibernate.properties"
			quiet="no"
			text="true"
			drop="false"
			delimiter=";"
			output="${target.generated.hibernate}/${ant.project.name}-recreate.sql">
			<fileset refid="hibernate.mapping.files"/>
		</schemaexport>
		<antcall target="-schemaexport.post"/>
	</target>
	
	<target name="-schemaexport.pre"/>
	<target name="-schemaexport.post"/>
	
</project>
